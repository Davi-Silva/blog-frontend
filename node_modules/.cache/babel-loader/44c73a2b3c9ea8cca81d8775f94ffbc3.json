{"ast":null,"code":"var _jsxFileName = \"/home/davi/Documents/Dev/course/frontend/src/components/admin/panel/content/podcast/podcastContent.component.jsx\";\nimport React, { Component } from \"react\";\nimport List from \"../list.component\";\nexport default class PodcastContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      podcasts: []\n    };\n    this.componentDidMount = this.componentDidMount(this);\n  }\n\n  async getAllPodcasts() {\n    let response = await fetch( // \"https://course-backend.herokuapp.com/podcasts/\",\n    \"http://localhost:5000/podcasts/\", {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let data = await response.json();\n    return data;\n  }\n\n  setStateAsync(state) {\n    return new Promise(resolve => {\n      this.setState(state, resolve);\n    });\n  }\n\n  async componentDidMount() {\n    const podcastsList = await this.getAllPodcasts();\n    await this.setStateAsync({\n      podcasts: podcastsList\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.podcasts.map((podcast, key) => {\n      return React.createElement(List, {\n        key: key,\n        type: podcast.type,\n        category: podcast.category,\n        title: podcast.title,\n        date: podcast.uploaded_on,\n        description: podcast.description,\n        liID: \"p-\".concat(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/davi/Documents/Dev/course/frontend/src/components/admin/panel/content/podcast/podcastContent.component.jsx"],"names":["React","Component","List","PodcastContent","constructor","props","state","podcasts","componentDidMount","getAllPodcasts","response","fetch","method","mode","cache","credentials","headers","data","json","setStateAsync","Promise","resolve","setState","podcastsList","render","height","map","podcast","key","type","category","title","uploaded_on","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACrDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE;AADE,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB,IAAvB,CAAzB;AACA;;AAED,QAAMC,cAAN,GAAuB;AACtB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,EACzB;AACA,qCAFyB,EAGzB;AACCC,MAAAA,MAAM,EAAE,KADT;AAECC,MAAAA,IAAI,EAAE,MAFP;AAGCC,MAAAA,KAAK,EAAE,UAHR;AAICC,MAAAA,WAAW,EAAE,aAJd;AAKCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AALV,KAHyB,CAA1B;AAaA,QAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;AACA,WAAOD,IAAP;AACA;;AAEDE,EAAAA,aAAa,CAACb,KAAD,EAAQ;AACpB,WAAO,IAAIc,OAAJ,CAAYC,OAAO,IAAI;AAC7B,WAAKC,QAAL,CAAchB,KAAd,EAAqBe,OAArB;AACA,KAFM,CAAP;AAGA;;AAED,QAAMb,iBAAN,GAA0B;AACzB,UAAMe,YAAY,GAAG,MAAM,KAAKd,cAAL,EAA3B;AACA,UAAM,KAAKU,aAAL,CAAmB;AAAEZ,MAAAA,QAAQ,EAAEgB;AAAZ,KAAnB,CAAN;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAwB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC1C,aACC,oBAAC,IAAD;AACC,QAAA,GAAG,EAAEA,GADN;AAEC,QAAA,IAAI,EAAED,OAAO,CAACE,IAFf;AAGC,QAAA,QAAQ,EAAEF,OAAO,CAACG,QAHnB;AAIC,QAAA,KAAK,EAAEH,OAAO,CAACI,KAJhB;AAKC,QAAA,IAAI,EAAEJ,OAAO,CAACK,WALf;AAMC,QAAA,WAAW,EAAEL,OAAO,CAACM,WANtB;AAOC,QAAA,IAAI,cAAOL,GAAP,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAWA,KAZA,CADF,CADD,CADD;AAmBA;;AA3DoD","sourcesContent":["import React, { Component } from \"react\";\n\nimport List from \"../list.component\";\n\nexport default class PodcastContent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpodcasts: []\n\t\t};\n\n\t\tthis.componentDidMount = this.componentDidMount(this);\n\t}\n\n\tasync getAllPodcasts() {\n\t\tlet response = await fetch(\n\t\t\t// \"https://course-backend.herokuapp.com/podcasts/\",\n\t\t\t\"http://localhost:5000/podcasts/\",\n\t\t\t{\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tmode: \"cors\",\n\t\t\t\tcache: \"no-cache\",\n\t\t\t\tcredentials: \"same-origin\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tlet data = await response.json();\n\t\treturn data;\n\t}\n\n\tsetStateAsync(state) {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.setState(state, resolve);\n\t\t});\n\t}\n\n\tasync componentDidMount() {\n\t\tconst podcastsList = await this.getAllPodcasts();\n\t\tawait this.setStateAsync({ podcasts: podcastsList });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ height: \"100%\" }}>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.podcasts.map((podcast, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\ttype={podcast.type}\n\t\t\t\t\t\t\t\tcategory={podcast.category}\n\t\t\t\t\t\t\t\ttitle={podcast.title}\n\t\t\t\t\t\t\t\tdate={podcast.uploaded_on}\n\t\t\t\t\t\t\t\tdescription={podcast.description}\n\t\t\t\t\t\t\t\tliID={`p-${key}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}