{"ast":null,"code":"var _jsxFileName = \"/home/davi/Documents/Dev/course/frontend/src/components/UI/admin/UploadField.component.jsx\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { DropContainer, UploadMessage } from \"../../../styled-components/admin.styled-components\";\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDragMessage = (isDragActive, isDragReject) => {\n      if (!isDragActive) {\n        return React.createElement(UploadMessage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Drag the audio file here...\");\n      }\n\n      if (isDragReject) {\n        return React.createElement(UploadMessage, {\n          type: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Unsupported file...\");\n      }\n\n      return React.createElement(UploadMessage, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Drop the audio file here...\");\n    };\n  }\n\n  render() {\n    const onUpload = this.props.onUpload;\n    return React.createElement(Dropzone, {\n      accept: \"image/*\",\n      onDropAccepted: onUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), this.renderDragMessage(isDragActive, isDragReject)));\n  }\n\n}","map":{"version":3,"sources":["/home/davi/Documents/Dev/course/frontend/src/components/UI/admin/UploadField.component.jsx"],"names":["React","Component","Dropzone","DropContainer","UploadMessage","Upload","renderDragMessage","isDragActive","isDragReject","render","onUpload","props","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,oDAHP;AAKA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC5CK,iBAD4C,GACxB,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAClD,UAAI,CAACD,YAAL,EAAmB;AACjB,eAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD;;AAED,UAAIC,YAAJ,EAAkB;AAChB,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AAED,aACE,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF;AAGD,KAb2C;AAAA;;AAe5CC,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAGP,WACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,cAAc,EAAEA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEE,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BN,MAAAA,YAA/B;AAA6CC,MAAAA;AAA7C,KAAD,KACC,oBAAC,aAAD,oBACMI,YAAY,EADlB;AAEE,MAAA,YAAY,EAAEL,YAFhB;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE,+CAAWK,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAMG,KAAKP,iBAAL,CAAuBC,YAAvB,EAAqCC,YAArC,CANH,CAFJ,CADF;AAcD;;AAhC2C","sourcesContent":["import React, { Component } from \"react\";\n\nimport Dropzone from \"react-dropzone\";\n\nimport {\n  DropContainer,\n  UploadMessage\n} from \"../../../styled-components/admin.styled-components\";\n\nexport default class Upload extends Component {\n  renderDragMessage = (isDragActive, isDragReject) => {\n    if (!isDragActive) {\n      return <UploadMessage>Drag the audio file here...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Unsupported file...</UploadMessage>;\n    }\n\n    return (\n      <UploadMessage type=\"success\">Drop the audio file here...</UploadMessage>\n    );\n  };\n\n  render() {\n    const { onUpload } = this.props;\n\n    return (\n      <Dropzone accept=\"image/*\" onDropAccepted={onUpload}>\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n          <DropContainer\n            {...getRootProps()}\n            isDragActive={isDragActive}\n            isDragReject={isDragReject}\n          >\n            <input {...getInputProps()} />\n            {this.renderDragMessage(isDragActive, isDragReject)}\n          </DropContainer>\n        )}\n      </Dropzone>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}